image: golang:1.10-stretch

stages:
  - test
  - build
  - deploy

before_script:
  - mkdir -p /go/src/lang.yottadb.com/go/yottadb /go/src/_/builds
  - cp -r $CI_PROJECT_DIR/* /go/src/lang.yottadb.com/go/yottadb
  - ln -s /go/src/lang.yottadb.com/go/yottadb /go/src/_/builds/yottadb
  - export GOPATH=/go
  - export PATH=${GOPATH}/bin:$PATH
  - go get -u github.com/golang/lint/golint
  - apt-get update -y -qq
  - apt-get install cmake tcsh {libconfig,libelf,libgcrypt,libgpg-error,libgpgme11,libicu,libncurses,libssl,zlib1g}-dev binutils file -y -qq
  - curl -fSsLO https://gitlab.com/YottaDB/DB/YDB/-/archive/master/YDB-master.tar.gz
  - tar xzf YDB-master.tar.gz
  - cd YDB-master
  - mkdir build && cd build
  - cmake -D CMAKE_INSTALL_PREFIX:PATH=$PWD ../
  - make -j `grep -c ^processor /proc/cpuinfo`
  - make install
  - cd yottadb_r*
  - ./ydbinstall --force-install
  - cd /go/src/lang.yottadb.com/go/yottadb
  - export ydb_dist=/usr/local/lib/yottadb/r123
  - export ydb_gbldir=mumps.gld
  - export ydb_routines=/usr/local/lib/yottadb/r123/libyottadbutil.so
  - echo exit | /usr/local/lib/yottadb/r123/mumps -run ^GDE
  - /usr/local/lib/yottadb/r123/mupip create

unit_tests:
  stage: test
  script:
    - go test -short $(go list ./... | grep -v /vendor/)

race_detector:
  stage: test
  script:
    - go test -race -short $(go list ./... | grep -v /vendor/)

coverage:
  stage: test
  script:
    - PKG_LIST=$(go list ./... | grep -v /vendor/)
    - mkdir -p $CI_PROJECT_DIR/cover
    - for package in ${PKG_LIST}; do
    -  go test -covermode=count -coverprofile "$CI_PROJECT_DIR/cover/${package##*/}.cov" "$package" ;
    - done
    - echo mode":" count > $CI_PROJECT_DIR/cover/coverage.cov
    - tail -q -n +2 $CI_PROJECT_DIR/cover/*.cov >> $CI_PROJECT_DIR/cover/coverage.cov
    - go tool cover -func=$CI_PROJECT_DIR/cover/coverage.cov
    - go tool cover -html=$CI_PROJECT_DIR/cover/coverage.cov -o $CI_PROJECT_DIR/cover/coverage.html
  artifacts:
    paths:
      - cover/coverage.cov
      - cover/coverage.html

lint_code:
  stage: test
  script:
    - golint -set_exit_status $(go list ./... | grep -v /vendor/ | grep -v /internal/)

build:
  stage: build
  script:
    - go build -i -v lang.yottadb.com/go/yottadb

pages:
  stage: deploy
  dependencies:
    - coverage
  script:
    - mkdir $CI_PROJECT_DIR/public
    - mv cover/coverage.html $CI_PROJECT_DIR/public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
