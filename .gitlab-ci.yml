image: yottadb/yottadb-base:latest-master

stages:
  - test
  - build
  - deploy

variables:
  GOLANG_VERSION: 1.10.5

before_script:
  - apt-get update && apt-get install -y --no-install-recommends wget ca-certificates git g++ gcc libc6-dev make pkg-config && rm -rf /var/lib/apt/lists/*
  - export GOPATH=/go
  - mkdir -p ${GOPATH}/src ${GOPATH}/bin && chmod -R 777 ${GOPATH}
  - mkdir -p ${GOPATH}/src/lang.yottadb.com/go/yottadb ${GOPATH}/src/_/builds
  - cp -r $CI_PROJECT_DIR/* ${GOPATH}/src/lang.yottadb.com/go/yottadb
  - ln -s ${GOPATH}/src/lang.yottadb.com/go/yottadb ${GOPATH}/src/_/builds/yottadb
  - export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
  - wget -O go.tgz https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go.tgz
  - rm go.tgz
  - go get -u github.com/golang/lint/golint
  - cd ${GOPATH}/src/lang.yottadb.com/go/yottadb
  - export ydb_dist=/opt/yottadb/current
  - export ydb_gbldir=mumps.gld
  - export ydb_routines=/opt/yottadb/current/libyottadbutil.so
  - echo exit | /opt/yottadb/current/mumps -run ^GDE
  - /opt/yottadb/current/mupip create
  - ls /usr/share/pkgconfig
  - cat /usr/share/pkgconfig/yottadb.pc

unit_tests:
  stage: test
  script:
    - go get -t
    - go test -short $(go list ./... | grep -v /vendor/)

race_detector:
  stage: test
  script:
    - go get -t
    - go test -race -short $(go list ./... | grep -v /vendor/)

coverage:
  stage: test
  script:
    - PKG_LIST=$(go list ./... | grep -v /vendor/)
    - mkdir -p $CI_PROJECT_DIR/cover
    - for package in ${PKG_LIST}; do
    -  go get -t
    -  go test -covermode=count -coverprofile "$CI_PROJECT_DIR/cover/${package##*/}.cov" "$package" ;
    - done
    - echo mode":" count > $CI_PROJECT_DIR/cover/coverage.cov
    - tail -q -n +2 $CI_PROJECT_DIR/cover/*.cov >> $CI_PROJECT_DIR/cover/coverage.cov
    - go tool cover -func=$CI_PROJECT_DIR/cover/coverage.cov
    - go tool cover -html=$CI_PROJECT_DIR/cover/coverage.cov -o $CI_PROJECT_DIR/cover/coverage.html
  artifacts:
    paths:
      - cover/coverage.cov
      - cover/coverage.html

lint_code:
  stage: test
  script:
    - golint -set_exit_status $(go list ./... | grep -v /vendor/ | grep -v /internal/)

build:
  stage: build
  script:
    - go build -i -v lang.yottadb.com/go/yottadb

pages:
  stage: deploy
  dependencies:
    - coverage
  script:
    - mkdir $CI_PROJECT_DIR/public
    - mv cover/coverage.html $CI_PROJECT_DIR/public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
